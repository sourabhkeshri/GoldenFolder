class Solution 
{ 
    //Function to return max value that can be put in knapsack of capacity W.
   
    static int knapSack(int w, int wt[], int val[], int n) 
    { 
        int [][]dp = new int[n+1][w+1];
        for(int i=0;i<n+1;i++){
            dp[i][0]=0;
        }
        
       for(int i=0;i<w+1;i++){
            dp[0][i]=0;
        }
        
        for(int i=1;i<n+1;i++){//i=1 right side = ka always use i-1
            for(int j=0;j<w+1;j++){//j=0
                if(wt[i-1]>j){
                    dp[i][j]=dp[i-1][j];
                }else{
                    dp[i][j]=Math.max(val[i-1]+dp[i-1][j-wt[i-1]],dp[i-1][j]);
                }
            }
        }
        return dp[n][w];
    } 
}